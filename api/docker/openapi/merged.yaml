openapi: 3.0.0
info:
  version: 0.1.0
  title: Panopticon API
servers:
  - url: 'http://localhost:3000'
paths:
  /v1/projects:
    get:
      operationId: projects_get
      summary: List available projects
      tags:
        - Projects
      responses:
        '200':
          description: Returns a list of projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
    post:
      operationId: projects_post
      summary: Create project
      tags:
        - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPost'
      responses:
        '200':
          description: Create a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutationResponse'
  '/v1/projects/{project_id}/tasks':
    get:
      operationId: tasks_get
      summary: List tasks
      tags:
        - Tasks
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: status
          required: false
          schema:
            type: string
            enum:
              - created
              - todo
              - doing
              - done
              - closed
      responses:
        '200':
          description: Returns a list of tasks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
components:
  schemas:
    MutationResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
    Projects:
      type: array
      items:
        $ref: '#/components/schemas/ProjectGet'
    ProjectGet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    ProjectPost:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    Tasks:
      type: array
      items:
        $ref: '#/components/schemas/TaskGet'
    TaskGet:
      type: object
      required:
        - id
        - name
        - status
      properties:
        id:
          type: integer
          format: int64
        external_url:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - created
            - todo
            - doing
            - done
            - closed
