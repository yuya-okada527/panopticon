openapi: 3.0.0
info:
  version: 0.1.0
  title: Panopticon API
tags:
  - name: Projects
    description: About Projects
  - name: Tasks
    description: About Tasks
  - name: TaskProviders
    description: About Task Providers
servers:
  - url: 'http://localhost:3000'
paths:
  /v1/projects:
    get:
      operationId: projects_get
      summary: List available projects
      tags:
        - Projects
      responses:
        '200':
          description: Returns a list of projects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
    post:
      operationId: projects_post
      summary: Create project
      tags:
        - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPost'
      responses:
        '200':
          description: Create a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutationResponse'
  '/v1/projects/{project_id}/tasks':
    get:
      operationId: tasks_get
      summary: List tasks
      tags:
        - Tasks
      parameters:
        - in: path
          name: project_id
          description: プロジェクトID
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: status
          description: タスクステータス
          required: false
          schema:
            type: string
            enum:
              - created
              - todo
              - doing
              - done
              - closed
        - in: query
          name: keyword
          description: 検索キーワード
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns a list of tasks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
  '/v1/projects/{project_id}/tasks/{task_id}':
    get:
      operationId: tasks_task_id_get
      summary: Show task detail
      tags:
        - Tasks
      parameters:
        - in: path
          name: project_id
          description: プロジェクトID
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: task_id
          description: タスクID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns a task detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskGet'
    post:
      operationId: tasks_task_id_post
      summary: Create a task
      tags:
        - Tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskPost'
      responses:
        '200':
          description: Create a task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutationResponse'
    put:
      operationId: tasks_task_id_put
      summary: Modify a task
      tags:
        - Tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskPut'
      responses:
        '200':
          description: Modify a task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutationResponse'
  '/v1/projects/{project_id}/tasks/{task_id}/status':
    put:
      operationId: tasks_task_id_status_put
      summary: Change task status
      tags:
        - Tasks
      parameters:
        - in: path
          name: project_id
          description: プロジェクトID
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: task_id
          description: タスクID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStatusPut'
      responses:
        '200':
          description: Change a task status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MutationResponse'
  '/v1/projects/{project_id}/task_providers':
    get:
      operationId: task_providers_get
      summary: List task providers
      tags:
        - TaskProviders
      parameters:
        - in: path
          name: project_id
          description: プロジェクトID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Returns a list of task providers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskProviders'
components:
  schemas:
    MutationResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
    Projects:
      type: array
      items:
        $ref: '#/components/schemas/ProjectGet'
    ProjectGet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    ProjectPost:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    Tasks:
      type: array
      items:
        $ref: '#/components/schemas/TaskGet'
    TaskGet:
      type: object
      required:
        - id
        - name
        - status
      properties:
        id:
          type: integer
          format: int64
        external_url:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - created
            - todo
            - doing
            - done
            - closed
    TaskPost:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string
    TaskPut:
      type: object
      required:
        - name
        - description
        - status
      properties:
        name:
          type: string
        description:
          type: string
        status:
          type: string
    TaskStatusPut:
      type: object
      required:
        - before_status
        - after_status
      properties:
        before_status:
          type: string
          enum:
            - created
            - todo
            - doing
            - done
            - closed
        after_status:
          type: string
          enum:
            - created
            - todo
            - doing
            - done
            - closed
    TaskProviders:
      type: array
      items:
        $ref: '#/components/schemas/TaskProviderGet'
    TaskProviderGet:
      type: object
      required:
        - id
        - name
        - provider_kind
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        provider_kind:
          type: string
          enum:
            - user
            - github
        provider_url:
          type: string
    TaskProviderPost:
      type: object
      required:
        - name
        - provider_kind
      properties:
        name:
          type: string
        provider_kind:
          type: string
          enum:
            - user
            - github
        organization:
          type: string
        repository:
          type: string
    TaskProviderSyncPost:
      type: object
      required:
        - user_name
      properties:
        user_name:
          type: string
